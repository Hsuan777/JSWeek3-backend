{"version":3,"sources":["all.js"],"names":["app","Vue","el","data","product","id","imgUrl","title","category","content","imgAlt","enabled","origin_price","services","price","unit","listProduct","temporary","methods","cleanDate","randomNum","parseInt","Math","random","addProduct","vm","push","JSON","parse","stringify","initData","Object","assign","copyData","item","updateData","console","log","forEach","index","deleteData","splice"],"mappings":"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","file":"all.js","sourcesContent":["let app = new Vue({\r\n  el:`#app`,\r\n  data:{\r\n    product:{\r\n      id:``,\r\n      imgUrl:``,\r\n      title:``,\r\n      category:``,\r\n      content:``,\r\n      imgAlt:``,\r\n      enabled:true,\r\n      origin_price:``,\r\n      services:[],\r\n      price:``,\r\n      unit:`間`\r\n    },\r\n    listProduct:[],\r\n    // 暫存物件，不讓初始化資料被修改\r\n    temporary:{},\r\n  },\r\n  methods:{\r\n    /* 將物件清空會觸發 Vue執行渲染畫面，也就是 v-for會更新畫面 */\r\n    // 關鍵字 : Vue Reactivity\r\n    cleanDate(){\r\n      this.temporary ={};\r\n    },\r\n    /* 亂數 */\r\n    randomNum(){\r\n      return parseInt( Math.random()*100);\r\n    },\r\n    /* 新增資料 */\r\n    addProduct(){\r\n      let vm = this; \r\n      \r\n      // 亂數給 ID \r\n      vm.temporary.id = `${this.randomNum()}${this.randomNum()}`;\r\n      \r\n      // 若直接 push(vm.product)會變成參考原本位址\r\n      // 所以先轉成字串再轉成物件就可以避免這樣的情況\r\n      vm.listProduct.push(JSON.parse(JSON.stringify(vm.temporary)));\r\n    },\r\n    /* 新建資料 */\r\n    initData(){\r\n      this.temporary = Object.assign({}, this.product) ;\r\n    },\r\n\r\n    /* 複製資料 */\r\n    copyData(item){\r\n      let vm = this;\r\n      // 修改欄位資料時會因為 v-model的雙向綁定直接顯示修改後的資料，這跟 v-model.lazy無關\r\n      // vm.temporary = item\r\n\r\n      // Object.assign({}, item)在新增多個屬性時，為什麼要用一個空物件來放入資料?\r\n      // 新建一個空物件，會被 Vue的響應資料偵測到，也是 Vue響應原理的其中一個方式，同時不會被視為傳參考\r\n      // 但是，單純的放入 item，像這樣 Object.assign(item)，就如同 vm.temporary = item\r\n      vm.temporary = Object.assign({}, item) ;\r\n    },\r\n    /* 更新資料 */\r\n    updateData(){\r\n      let vm = this; \r\n      // 判斷是否有值\r\n      if (vm.temporary.id){\r\n        console.log(vm.product.id+`修改`);\r\n        vm.listProduct.forEach((item, index) => {\r\n          if (vm.temporary.id === item.id){\r\n            // 為什麼這個不行? 因為只針對 forEach取出來的物件做替換資料\r\n            // item = vm.temporary;\r\n  \r\n            // 重新讓 listProduct紀錄物件資料，但不會觸發 Vue的響應\r\n            vm.listProduct[index] = vm.temporary;\r\n          }\r\n        })\r\n      } else {\r\n        console.log(vm.product.id+`新增`);\r\n        vm.addProduct();\r\n      }\r\n      vm.cleanDate();\r\n    },\r\n    deleteData(){\r\n      let vm = this; \r\n      vm.listProduct.forEach((item, index) => {\r\n        if (vm.temporary.id === item.id){\r\n          vm.listProduct.splice(index, 1);\r\n        }\r\n      })\r\n      vm.cleanDate();\r\n    }\r\n  }\r\n})"]}